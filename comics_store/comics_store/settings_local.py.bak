"""
Django settings for comics_store project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path
import urllib
import json

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'XXXXX'
# SECRET_KEY = os.getenv('SECRET_KEY', "SECRET_KEY no existe")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
# DEBUG = bool(os.getenv('DEBUG', "DEBUG no existe"))

# SECURITY WARNING: elige qué ip's permitir y cuales no.
ALLOWED_HOSTS = ['*']
# ALLOWED_HOSTS = [os.getenv('ALLOWED_HOSTS')]

# SECURITY WARNING: elige qué ip's permitir y cuales no.
CORS_ORIGIN_ALLOW_ALL = True
# CORS_ORIGIN_ALLOW_ALL = bool(os.getenv('CORS_ORIGIN_ALLOW_ALL', "CORS_ORIGIN_ALLOW_ALL no existe"))

# SECURITY WARNING: elige qué ip's permitir y cuales no.
CSRF_TRUSTED_ORIGINS = ['http://0.0.0.0', 'https://0.0.0.0', 'http://localhost']
# csrf_trusted_origins_list = json.loads(os.getenv('CSRF_TRUSTED_ORIGINS'))
# CSRF_TRUSTED_ORIGINS = csrf_trusted_origins_list

# SECURITY WARNING: mantener activa esta opción para redireccionar todas las peticiones http a https.
# SECURE_SSL_REDIRECT = bool(os.getenv('SECURE_SSL_REDIRECT'))

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_jwt',
    'corsheaders',
    'users',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware', # Disabled for develop purposes
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'comics_store.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'comics_store.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

url_to_db = 'mongodb+srv://'+os.getenv('DATABASE_USER', "DATABASE_USER no existe")+':'+os.getenv('DATABASE_PASSWORD', "DATABASE_PASSWORD no existe")+'@users.rshah.mongodb.net/comics_store?retryWrites=true&w=majority'
# url_to_db_hard_coded = 'mongodb+srv://coppel_test:jJX8M53WeFa90jKD@users.rshah.mongodb.net/comics_store?retryWrites=true&w=majority'

DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': 'comics_store',
        'CLIENT': {
            'host': url_to_db,
        },
        'USER': 'coppel_test',
        'PASSWORD': 'jJX8M53WeFa90jK',
        'ENFORCE_SCHEMA': False,
    },
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_ROOT = '/static/'
STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
